exit
continue!
continue
{:games => @games.map(&:as_json)} 
{:games => @games.map(&:as_json)}
@games
continue
{:game => @game.as_json}
{:game => @game.to_json}
{:game => @game}
@game
continue
winner = combinations.detect {|combo| board[combo[0]] != "" && board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]] } ? true : false
winner? = combinations.detect {|combo| board[combo[0]] != "" && board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]] } ? true : false
combinations.detect {|combo| board[combo[0]] != "" && board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]] } ? true : false
if combinations.detect {|combo| board[combo[0]] != "" && board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]] }
combinations.detect {|combo| board[combo[0]] != "" && board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]] }
combinations
continue
params[:state]
params
continue
params
continue
params
continue
session.methods
session.keys
session
params
exit
params
exit
render json: @game
@game
n
exit
@game.to_json
n
exit
n
Game.new(:state => params[:game])
exit
exception
n
exit
params[:game]
